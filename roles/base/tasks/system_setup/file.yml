# - name: Check if file is not a symbolic link
#   stat:
#     path: $HOME/.bashrc
#   register: file_stat
# 
# - name: back up .bashrc
#   become_user: jaziel
#   shell: mv $HOME/.bashrc $HOME/.bashrc.bk
#   when: file_stat.stat.islink is not defined or file_stat.stat.islink == false
- name: file | create .dot |
  become_user: jaziel
  tags: dotfiles,stow
  file:
    path: $HOME/.config/.dot
    state: directory
    owner: jaziel
    group: jaziel
    mode: 0700
- name: Ensure dotfiles repository is cloned locally.
  tags: stow
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_repo_local_destination }}"
    version: "{{ dotfiles_repo_version }}"
    force: true
    accept_hostkey: "{{ dotfiles_repo_accept_hostkey }}"
  become_user: jaziel

# 
# - name: cp stow files
#   become_user: jaziel
#   tags: stow
#   copy:
#     src: "config/{{ item }}/"
#     dest: $HOME/.config/.dot 
#     remote_src: yes
#     mode: directory_mode
# #     dirs: true
# #     recursive: true
# #     rsync_opts:
# #       - "--mkpath"
#   with_items: "{{ stow_config }}"

- name: Check if file is not a symbolic link
  tags: stow
  stat:
    path: $HOME/.bashrc
  register: file_stat
  ignore_errors: yes

- name: back up .bashrc
  tags: stow
  become_user: jaziel
  shell: mv $HOME/.bashrc $HOME/.bashrc.bk
  when: file_stat.stat.islink is not defined or file_stat.stat.islink == false
  ignore_errors: yes

# - name: List files in the folder
#   tags: stow
#   find:
#     paths: "{{ dotfiles_repo_local_destination }}/{{ item }}/"
#     recurse: yes
#     file_type: file
#   register: folder_contents
#   become_user: jaziel
#   with_items: "{{ dotfiles_files }}"

# - name: Remove existing dotfiles file if a replacement is being linked.
#   tags: stow
#   file:
#     path: "{{ dotfiles_home }}/{{ dotfiles_files[item.0] }}"
#     state: absent
#   when: "'@' not in item.1.stdout"
#   become_user: jaziel
#   with_indexed_items: "{{ existing_dotfile_info.results }}"

# - name: Link dotfiles into home folder.
#   tags: stow
#   file:
#     src: "{{ dotfiles_repo_local_destination }}/{{ item }}/{{ folder_contents.files }}"
#     dest: "{{ dotfiles_home }}/{{ item }}/{{ folder_contents.files }}"
#     state: link
#     mode: 0744
#   become_user: jaziel
#   with_items: "{{ dotfiles_files }}"

# - name: file | stow dotfiles |
#   shell: stow --stow --target=$HOME --dir="{{ dotfiles_repo_local_destination }}/{{ item }}/"
#   become_user: jaziel
#   with_items: "{{ dotfiles_files }}"
- name: stow dotfiles
  become_user: jaziel
  tags: "install,stow"
  stow:
    state: supress
    package: "{{ item }}"
    dir: "{{ dotfiles_repo_local_destination }}"
    target: $HOME
  with_items: "{{ dotfiles_files }}"
