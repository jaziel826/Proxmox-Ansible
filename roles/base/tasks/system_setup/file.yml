# - name: Check if file is not a symbolic link
#   stat:
#     path: $HOME/.bashrc
#   register: file_stat
# 
# - name: back up .bashrc
#   become_user: jaziel
#   shell: mv $HOME/.bashrc $HOME/.bashrc.bk
#   when: file_stat.stat.islink is not defined or file_stat.stat.islink == false
- name: file | create .dot |
  become_user: jaziel
  tags: dotfiles,stow
  file:
    path: $HOME/.config/.dot
    state: directory
    owner: jaziel
    group: jaziel
    mode: 0700
- name: Ensure dotfiles repository is cloned locally.
  tags: stow
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles_repo_local_destination }}"
    version: "{{ dotfiles_repo_version }}"
    accept_hostkey: "{{ dotfiles_repo_accept_hostkey }}"
  become: false

# 
# - name: cp stow files
#   become_user: jaziel
#   tags: stow
#   copy:
#     src: "config/{{ item }}/"
#     dest: $HOME/.config/.dot 
#     remote_src: yes
#     mode: directory_mode
# #     dirs: true
# #     recursive: true
# #     rsync_opts:
# #       - "--mkpath"
#   with_items: "{{ stow_config }}"

- name: Ensure all configured dotfiles are links.
  tags: stow
  command: "ls -F {{ dotfiles_home }}/{{ item }}"
  register: existing_dotfile_info
  failed_when: false
  check_mode: false
  changed_when: false
  with_items: "{{ dotfiles_files }}"

- name: List files in the folder
  find:
    paths: "{{ dotfiles_repo_local_destination }}/{{ item }}/"
    recurse: yes
    file_type: file
  register: folder_contents

- name: Remove existing dotfiles file if a replacement is being linked.
  tags: stow
  file:
    path: "{{ dotfiles_home }}/{{ dotfiles_files[item.0] }}"
    state: absent
  when: "'@' not in item.1.stdout"
  with_indexed_items: "{{ existing_dotfile_info.results }}"

- name: Link dotfiles into home folder.
  tags: stow
  file:
    src: "{{ dotfiles_repo_local_destination }}/{{ item }}/{{ folder_contents.files }}"
    dest: "{{ dotfiles_home }}/{{ item }}/{{ folder_contents.files }}"
    state: link
    mode: 0744
  become: false
  with_items: "{{ dotfiles_files }}"

#- name: file | stow dotfiles |
#  shell: stow --stow --target=$HOME --dir=$HOME/.config/.dot/
# - name: stow dotfiles
#   become_user: jaziel
#   tags: "install,stow"
#   stow:
#     state: supress
#     package: "{{ item }}"
#     dir: $HOME/.config/.dot
#     target: $HOME
#   with_items: "{{ stow_config }}"
